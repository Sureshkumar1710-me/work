import numpy as np
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA

# Assuming data1 and data2 are your numpy arrays of shape (n, 10) and (m, 10) respectively
data1 = np.random.rand(100, 10)  # Example data, replace with your actual data
data2 = np.random.rand(80, 10)   # Example data, replace with your actual data

# Create a PCA object to reduce to 2 dimensions
pca = PCA(n_components=2)

# Fit and transform the data
data1_pca = pca.fit_transform(data1)
data2_pca = pca.fit_transform(data2)

# Plot the results
plt.figure(figsize=(10, 6))
plt.scatter(data1_pca[:, 0], data1_pca[:, 1], label='Data 1', alpha=0.7)
plt.scatter(data2_pca[:, 0], data2_pca[:, 1], label='Data 2', alpha=0.7)

# Add labels and legend
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.title('PCA of Data1 and Data2')
plt.legend()
plt.show()
